[gd_scene load_steps=5 format=3 uid="uid://cxtumhi8g836c"]

[ext_resource type="PackedScene" uid="uid://bavctgy5rc7u8" path="res://Scenes/Player.tscn" id="1_muv3v"]
[ext_resource type="Texture2D" uid="uid://fbur0tfi1vl6" path="res://Materials/Player_0.png" id="2_74tsm"]

[sub_resource type="GDScript" id="GDScript_uvve6"]
resource_name = "Control_Actual"
script/source = "extends \"res://Scripts/PlayerScripts.gd\"

@onready var ui = get_viewport().get_node(\"Root/UI/Control\")

var is_running = false
var Inventory = {}

func _ready():
	self.Health = 76
	set_HP(self.Health, self.Max_health)

func pick(item):
	var it = item.get_item()
	if it in Inventory.keys():
		Inventory[it][0] += item.get_amount()
	else: 
		Inventory[it] = [item.get_amount(), item.get_stack_item()]

func get_input():
	var input_direction = Input.get_vector(\"Left\", \"Right\", \"Up\", \"Down\")
	
	if Input.is_action_pressed(\"Run\"):
		is_running = true
	else:
		is_running = false
		
	velocity = input_direction * (speed * 2 if is_running else speed)
	
	position.x = clamp(position.x, 0, 10000)
	position.y = clamp(position.y, 0, 10000)

func _physics_process(_delta):
	get_input()
	move_and_slide()


func _unhandled_input(event):
	if event.is_action_pressed(\"Inventory\"):
		ui.toggle_inventory(Inventory)

#func _run(_delta):
	#if input.is_action_pressed(\"run\") and move_and_slide(_delta):
		#run_state()
#
#func _run_state(_delta):
	#speed = 300
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_dwshu"]
size = Vector2(20, 32)

[node name="Player" instance=ExtResource("1_muv3v")]
script = SubResource("GDScript_uvve6")

[node name="Sprite2D" type="Sprite2D" parent="." index="0"]
texture = ExtResource("2_74tsm")
centered = false

[node name="CollisionShape2D" parent="." index="1"]
shape = SubResource("RectangleShape2D_dwshu")

[node name="Camera2D" type="Camera2D" parent="." index="2"]

[node name="BarHP" parent="." index="3"]
offset_left = 6.0
offset_top = -4.0
offset_right = 27.0
offset_bottom = -2.0
